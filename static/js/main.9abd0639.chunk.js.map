{"version":3,"sources":["components/MessageBox/Message.jsx","socket-api.js","components/MessageBox/MessageDisplay.jsx","components/MessageBox/MessageInputBox.jsx","components/MessageBox/MessageArea.jsx","names.js","components/Popup.jsx","components/ColorButton.jsx","components/PlayArea.jsx","components/UserList/UsersBox.jsx","components/App.jsx","index.js"],"names":["Message","props","message","type","className","username","content","sender","socket","openSocket","MessageDisplay","useEffect","on","console","log","newMessage","setMessages","prev","off","messages","map","idx","key","MessageInputBox","useState","messageInput","setMessageInput","onChange","event","target","value","onKeyPress","preventDefault","emit","name","id","autoComplete","rows","placeholder","style","resize","display","margin","width","MessageArea","height","names","getRandomName","Math","floor","random","length","Popup","setUsername","nameInvalidMessage","setNameInvalidMessage","onSubmit","status","test","onClick","ColorButton","hexCode","setBrushColor","border","background","PlayArea","canThisUserDraw","setCanThisUserDraw","canvasData","setCanvasData","brushColor","brushSize","setBrushSize","timeDisplay","setTimeDisplay","blankCanvasData","hexCodes","timerID","handleCanvasChange","data","getSaveData","forceClear","newDrawer","newCanvasData","roundTimeInterval","setInterval","clearInterval","canvasHeight","canvasWidth","hideGrid","lazyRadius","hideInterface","disabled","loadTimeOffset","immediateLoading","saveData","brushRadius","min","max","UsersBox","users","setUsers","host","setHost","usersReady","setUsersReady","userList","hostName","user","hostPrefix","includes","App","Username","clientUsername","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9abd0639.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n    // Multi-condition express syntax:\r\n    // var yourVar =\r\n    // condition1 ? value1\r\n    // : condition2 ? value2\r\n    // ...\r\n    // defaultValue\r\n\r\nfunction Message(props) {\r\n    return (<div>\r\n        {\r\n        props.message.type === \"meta-join\" ?\r\n        <p className=\"my-0 text-success\"><strong>{props.message.username}</strong> {props.message.content}</p>\r\n        : props.message.type === \"meta-leave\" ?\r\n        <p className=\"my-0 text-danger\"><strong>{props.message.username}</strong> {props.message.content}</p>\r\n        : <p className=\"my-0\"><strong>{props.message.sender}:</strong> {props.message.content}</p>\r\n    }\r\n    </div>);\r\n}\r\n\r\nexport default Message;","import openSocket from \"socket.io-client\";\r\nconst socket = openSocket(\"https://scribblio.herokuapp.com/\");\r\n// const socket = openSocket(\"localhost:8000\");\r\nexport default socket;","import React, { useEffect } from 'react';\r\nimport Message from \"./Message\";\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport socket from \"../../socket-api\";\r\n\r\nfunction MessageDisplay(props) {\r\n\r\n    useEffect(() => {\r\n        // This code in here only runs once --> upon initial render.\r\n        socket.on(\"connect\", () => {\r\n            console.log(\"Connected To Server.\");\r\n            socket.on(\"send-message\", newMessage => {\r\n                props.setMessages(prev => [...prev, newMessage]);\r\n                console.log(\"YOU GOT A NEW MESSAGE:\" + newMessage);\r\n            });\r\n        });\r\n        return function cleanupSockets() {\r\n            socket.off(\"connect\");\r\n            socket.off(\"send-message\");\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ScrollToBottom className=\"overflow-auto mx-3\">\r\n            {props.messages.map((message, idx) => <Message key={idx} message={message} />)}\r\n        </ScrollToBottom>);\r\n}\r\n\r\nexport default MessageDisplay;","import React, { useState } from \"react\";\r\nimport socket from \"../../socket-api\";\r\n\r\nfunction MessageInputBox(props) {\r\n\r\n    const [messageInput, setMessageInput] = useState(\"\");\r\n\r\n    function handleEnterKey(event) {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            if (messageInput !== \"\") {\r\n                socket.emit(\"send-message\", messageInput);\r\n                setMessageInput(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        setMessageInput(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <textarea className=\"form-control mb-3 border border-secondary\"\r\n            type=\"text\"\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleEnterKey}\r\n            value={messageInput}\r\n            name=\"messageInput\"\r\n            id=\"messageInput\"\r\n            autoComplete=\"off\"\r\n            rows=\"2\"\r\n            placeholder=\"Type To Chat...\"\r\n            style={{ resize: \"none\", display: \"block\", margin: \"auto\", width: \"90%\" }}></textarea>);\r\n}\r\nexport default MessageInputBox;","import React from \"react\";\r\nimport MessageDisplay from \"./MessageDisplay\";\r\nimport MessageInputBox from \"./MessageInputBox\";\r\n\r\nfunction MessageArea(props) {\r\n    console.log(\"Outer log\");\r\n\r\n    return <div className=\"card mt-3 border border-secondary\"  style={{height: \"95vh\", width: \"20%\"}}>\r\n        <MessageDisplay messages = {props.messages} setMessages={props.setMessages}/>\r\n        <hr></hr>\r\n        <MessageInputBox setMessages={props.setMessages} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default MessageArea;\r\n\r\n","const names = [\"Tiesha Thurlow\"\r\n    , \"Rebbecca Reece\"\r\n    , \"Kary Kosakowski\"\r\n    , \"Jessie Jahnke\"\r\n    , \"Ernie Estridge\"\r\n    , \"Sharda Selley\"\r\n    , \"Michale Mackson\"\r\n    , \"Reginia Ruffino\"\r\n    , \"Gilda Guard\"\r\n    , \"Oren Ohanlon\"\r\n    , \"Louella Leedom\"\r\n    , \"Elvie Ekdahl\"\r\n    , \"Amparo Alpaugh\"\r\n    , \"Julee Jacobs\"\r\n    , \"Georgette Gast\"\r\n    , \"Burma Boatright\"\r\n    , \"Dianna Diggins\"\r\n    , \"Floyd Fortson\"\r\n    , \"Teresia Trueblood\"\r\n    , \"Goldie Gigliotti\"\r\n    , \"Lashawnda Lentini\"\r\n    , \"Felicia Fishburn\"\r\n    , \"Buddy Boren\"\r\n    , \"Jo Jeffers\"\r\n    , \"Samara Starr\"\r\n    , \"Vania Vecchio\"\r\n    , \"Darlena Dryer\"\r\n    , \"Danny Denzer\"\r\n    , \"Dania Dunmore\"\r\n    , \"Joan Jelley\"\r\n    , \"Lovetta Lovell\"\r\n    , \"Albertha Agar\"\r\n    , \"Rolando Ruffin\"\r\n    , \"Cinthia Choiniere\"\r\n    , \"Russell Rickett\"\r\n    , \"Meg Mchaney\"\r\n    , \"Floy Felps\"\r\n    , \"Grayce Garrow\"\r\n    , \"Sammy Sinnott\"\r\n    , \"Reta Ruiz\"\r\n    , \"Stanton Schade\"\r\n    , \"Margarette Melo\"\r\n    , \"Audry Abelson\"\r\n    , \"Loreta Langham\"\r\n    , \"Loree Lively\"\r\n    , \"Jayson Jagodzinski\"\r\n    , \"Breana Buhler\"\r\n    , \"Phylis Prager\"\r\n    , \"Hilton Hawkins\"\r\n    , \"Meri Menzie\"];\r\n\r\nfunction getRandomName() {\r\n    return names[Math.floor(Math.random() * names.length)];\r\n}\r\n\r\nexport default getRandomName;\r\n// Make it mix and match later so theres 50 x 50 = 2500 total possible names","import React, { useState } from \"react\";\r\nimport socket from \"../socket-api.js\";\r\nimport getRandomName from \"../names.js\";\r\n\r\nfunction Popup(props) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [nameInvalidMessage, setNameInvalidMessage] = useState(false);\r\n\r\n    function handleInputChange(event) {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    function generateRandomName(event) {\r\n        event.preventDefault();\r\n        setUsername(getRandomName());\r\n    }\r\n    function handleSubmit(event) {\r\n        // No http requests\r\n        event.preventDefault();\r\n        if (username === \"\") {\r\n            // Return error if no username given\r\n            console.log(event.target);\r\n            setNameInvalidMessage({ status: true, message: \"Please enter a username.\" })\r\n        } else {\r\n            // Check with regex if name is alphanumeric + spaces + \"_\" and \"-\"...\r\n            let isNameValid = /^[\\w\\-\\s]+$/.test(username);\r\n            if (isNameValid) {\r\n                socket.emit(\"send-username\", username);\r\n                props.setUsername(username);\r\n            } else {\r\n                // ...and return an error if it isn't\r\n                setNameInvalidMessage({ status: true, message: \"Usernames can only have the following types: letters, numbers, spaces, _ and -.\" });\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className=\"popup\">\r\n        <div className=\"popup_inner\">\r\n            <h3 className=\"text-center mt-5 mb-3\">My name is...</h3>\r\n            <form className=\"text-center\" onSubmit={handleSubmit}>\r\n                <input className=\"form form-control m-auto\"\r\n                    autoComplete=\"off\" style={{ width: \"70%\" }}\r\n                    type=\"text\"\r\n                    name=\"nameInput\"\r\n                    onChange={handleInputChange}\r\n                    value={username}\r\n                    placeholder={getRandomName()}>\r\n                </input>\r\n                {nameInvalidMessage ?\r\n                    <p className=\"text-danger mt-2\">{nameInvalidMessage.message}</p>\r\n                    : <p className=\"mt-2\">Press \"Go\" or hit ENTER to join.</p>}\r\n                    \r\n                <button className=\"btn btn-large btn-outline-dark mt-3 mx-1\" type=\"submit\" name=\"go\">Go!</button>\r\n                <button className=\"btn btn-large btn-outline-success mt-3 mx-1\" onClick={generateRandomName} name=\"random-name\">Random Name</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Popup;","import React from \"react\";\r\n\r\nfunction ColorButton(props) {\r\n\r\n    function handleButtonClick() {\r\n        console.log(props.hexCode);\r\n        props.setBrushColor(`#${props.hexCode}`);\r\n    }\r\n\r\n    return <button className=\"my-0\" onClick={handleButtonClick} style={{width: \"30px\", height: \"30px\", border: \"none\", background: `#${props.hexCode}`}}></button>\r\n}\r\n\r\nexport default ColorButton;","import React, { useState, useEffect } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport socket from \"../socket-api\";\r\nimport ColorButton from \"./ColorButton\";\r\n\r\nfunction PlayArea(props) {\r\n    const [canThisUserDraw, setCanThisUserDraw] = useState(false);\r\n    const [canvasData, setCanvasData] = useState(\"\");\r\n    const [brushColor, setBrushColor] = useState(\"000000\");\r\n    const [brushSize, setBrushSize] = useState(10);\r\n    const [timeDisplay, setTimeDisplay] = useState(null);\r\n    const blankCanvasData = '{\"lines\":[{\"points\":[{\"x\":0,\"y\":0}, {\"x\":2000,\"y\":2000}],\"brushColor\":\"#fff\",\"brushRadius\":1}],\"width\":\"100%\",\"height\":\"95%\"}';\r\n    const hexCodes = [\"FFFFFF\", \"000000\", \"C1C1C1\", \"4C4C4C\", \"EF130B\", \"740B07\", \"FF7100\", \"C23800\", \"FFE400\", \"E8A200\", \"00CC00\", \"005510\", \"00B2FF\", \"00569E\", \"231FD3\", \"0E0865\", \"A300BA\", \"550069\", \"D37CAA\", \"A75574\", \"A0522D\", \"63300D\"];\r\n    let timerID = null;\r\n    // Make canvas into an object of {sender, data} and then compare --> if onChange, the latest canvasData sender is not self dont emit\r\n    // This is so that data received is one way --> otherwise it will be data gotten --> emittted same data back.\r\n    // Wait this might not work.\r\n\r\n    // Disable canvas until/unless server sends/sent a message that it's this user's turn\r\n    useEffect(() => {\r\n        // This code in here only runs once --> upon initial render.\r\n        // There is no issue with props warning since username can't be changed and this component\r\n        // is only rendered once username is sent\r\n        socket.on(\"drawer-change\", newDrawer => {\r\n            if (newDrawer === \"everyone\") {\r\n                setCanThisUserDraw(true);\r\n                console.log(\"everyone can draw now!\");\r\n            } else if (newDrawer === \"no one\") {\r\n                setCanThisUserDraw(false);\r\n                console.log(\"no one can draw now!\");\r\n            } else if (props.username === newDrawer) {\r\n                setCanThisUserDraw(true);\r\n                console.log(\"You can draw now!\");\r\n            } else {\r\n                setCanThisUserDraw(false);\r\n                console.log(\"You can't draw now! Sorry!\");\r\n                console.log(\"New Drawer/Your Name: \" + newDrawer + \" / \" + props.username);\r\n            }\r\n        });\r\n        return () => {\r\n            socket.off(\"drawer-change\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // This code in here only runs once --> upon initial render.\r\n        socket.on(\"canvas-change\", newCanvasData => {\r\n            console.log(\"YOU GOT SOME CANVAS DATA:\");\r\n            console.log(newCanvasData);\r\n            setCanvasData(newCanvasData.data);\r\n        });\r\n        return () => {\r\n            socket.off(\"canvas-change\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // This code in here only runs once --> upon initial render.\r\n        socket.on(\"clear-canvas\", () => {\r\n            console.log(\"got a message to clear canvas\");\r\n            forceClear();\r\n        });\r\n        return () => {\r\n            socket.off(\"clear-canvas\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"round-started\", roundTimeInterval => {\r\n            setTimeDisplay(roundTimeInterval/1000);\r\n            timerID = setInterval(() => {\r\n                setTimeDisplay(prev => prev - 1);\r\n            }, 1000);\r\n            console.log(\"Started TIMER!\");\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"round-ended\", () => {\r\n            clearInterval(timerID);\r\n            setTimeDisplay(null);\r\n        });\r\n    }, []);\r\n\r\n\r\n    function handleCanvasChange(event) {\r\n        if (canThisUserDraw) {\r\n            socket.emit(\"canvas-change\", { data: event.getSaveData(), sender: props.username });\r\n            console.log(\"You sent some data\");\r\n        }\r\n    }\r\n\r\n    function handleSliderChange(event) {\r\n        setBrushSize(event.target.value);\r\n    }\r\n\r\n    function forceClear() {\r\n        if (canThisUserDraw) {\r\n            setCanvasData(blankCanvasData);\r\n            socket.emit(\"clear-canvas\");\r\n            handleCanvasChange({\r\n                getSaveData: function () {\r\n                    return blankCanvasData;\r\n                }\r\n            });\r\n            console.log(\"CLEARED CANVAS\");\r\n        }\r\n    }\r\n\r\n    function undo() {\r\n        if (canThisUserDraw) {\r\n            socket.emit(\"undo-canvas\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (<div className=\"col-8\">\r\n        <CanvasDraw className=\"canvas\"\r\n            onChange={handleCanvasChange}\r\n            canvasHeight=\"90%\"\r\n            canvasWidth=\"100%\"\r\n            hideGrid={true}\r\n            lazyRadius={0}\r\n            hideInterface={!canThisUserDraw}\r\n            disabled={!canThisUserDraw}\r\n            loadTimeOffset={0}\r\n            immediateLoading={true}\r\n            saveData={canvasData}\r\n            brushColor={brushColor}\r\n            brushRadius={brushSize}\r\n        />\r\n        <div className=\"row\">\r\n            <div className=\"col-1 my-0\">\r\n                <button className=\"my-0\" onClick={forceClear}>CLEAR</button>\r\n                <button className=\"my-0\" onClick={undo}>UNDO</button>\r\n            </div>\r\n            <div className=\"col-5 my-0\">\r\n                <div className=\"col-12 my-0\">\r\n                    {hexCodes.map((hexCode, idx) => (idx % 2 === 1) ? <ColorButton key={idx} setBrushColor={setBrushColor} hexCode={hexCode} /> : null)}\r\n                </div>\r\n                <div className=\"col-12 my-0\">\r\n\r\n                    {hexCodes.map((hexCode, idx) => (idx % 2 === 0) ? <ColorButton key={idx} setBrushColor={setBrushColor} hexCode={hexCode} /> : null)}\r\n                </div>\r\n            </div>\r\n            <div className=\"col-3\">\r\n                <input type=\"range\" min=\"1\" max=\"20\" value={brushSize} onChange={handleSliderChange}></input>\r\n                <h6>Change Brush Size</h6>\r\n            </div>\r\n            <div className=\"col-3\">{timeDisplay}</div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default PlayArea;","import React, { useState } from \"react\";\r\nimport socket from \"../../socket-api\";\r\n\r\n// IMPLEMENT AUTOSCROLL CHAT BOX\r\n\r\nfunction UsersBox(props) {\r\n    const [users, setUsers] = useState([]);\r\n    const [host, setHost] = useState(\"\");\r\n    const [usersReady, setUsersReady] = useState([]);\r\n    socket.on(\"user-list\", userList => {\r\n        setUsers(userList);\r\n    });\r\n\r\n    socket.on(\"new-host\", hostName => {\r\n        setHost(hostName);\r\n    });\r\n\r\n    socket.on(\"ready-change\", usersReady => {\r\n        setUsersReady(usersReady);\r\n    })\r\n\r\n    return <div className=\"card mt-3 border border-secondary UserListBox\" style={{ width: \"12%\" }}>\r\n        <h5 className=\"text-center\">Players online: {users.length}</h5>\r\n\r\n        <ul>\r\n            {users.map((user, idx) => {\r\n                let hostPrefix = \"\";\r\n                if (user === host) {\r\n                    hostPrefix = \"Host: \";\r\n                }\r\n                return (usersReady.includes(user) ? <li className=\"text-success\" key={idx}><strong>{hostPrefix}{user}</strong></li>\r\n                    : <li className=\"text-danger\" key={idx}><strong>{hostPrefix}{user}</strong></li>);\r\n            }\r\n            )}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default UsersBox;","import React, { useState } from 'react';\nimport MessageArea from \"./MessageBox/MessageArea\"\nimport Popup from \"./Popup\";\nimport PlayArea from \"./PlayArea\";\nimport UsersBox from './UserList/UsersBox';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [Username, setUsername] = useState(\"\");\n\n  return (\n    <div>\n      <div className=\"row\">\n        <UsersBox clientUsername={Username}/>\n        {!(Username===\"\") ? <PlayArea username={Username}/> : <div className=\"col-8\"></div>}\n        <MessageArea messages={messages} setMessages={setMessages}/>\n      </div>\n      {(Username===\"\") && <Popup setUsername={setUsername}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(  \n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}